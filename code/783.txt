/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int>A;
    int minDiffInBST(TreeNode* root) {
        int res=INT_MAX;
        dfs(root);
        sort(A.begin(),A.end());
        
        for(int i=1;i<A.size();i++){
            res=min(res,A[i]-A[i-1]);
        }
        return res;
    }
    
    void dfs(TreeNode* root){
        if(root==NULL)return;
        dfs(root->left);
        dfs(root->right);
        A.push_back(root->val);
    }
};
