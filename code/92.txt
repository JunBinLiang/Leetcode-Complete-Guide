/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode reverseBetween(ListNode head, int m, int n) {
        if(head==null)return null;
        ListNode dummy=new ListNode();
        dummy.next=head;
        ListNode cur=head;
        ListNode pre=dummy;
        for(int i=0;i<m-1;i++){
            pre=cur;
            cur=cur.next;
        }
       
        ListNode pair[]=reverse(cur,n-m);
        cur.next=pair[1];
        pre.next=pair[0];
        
        return dummy.next;
    }
    
    public ListNode[] reverse(ListNode head,int t){
        ListNode pre=head;
        ListNode cur=head.next;
        for(int i=0;i<t;i++){
            ListNode next=cur.next;
            cur.next=pre;
            pre=cur;
            cur=next;
            
        }
        return new ListNode[]{pre,cur};
    }
}
