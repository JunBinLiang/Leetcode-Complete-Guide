class Solution {
    public boolean isMagic(int[] A) {
        List<Integer>list=new ArrayList<>();
        for(int i=1;i<=A.length;i++){
            list.add(i);
        }
        
        List<Integer>cur=transform(list);
        
        int k=0;
        int index=0;
        for(int i=0;i<A.length;i++){
            if(A[i]==cur.get(i)){
                k++;
            }else{
                index=i;
                break;
            }
        }
        if(k==0)return false;
        //System.out.println(k);
        while(cur.size()>0){
            cur=cut(cur,k);
            cur=transform(cur);
            
            if(cur.size()<k){
                for(int i=0;i<cur.size();i++){
                    if(cur.get(i)!=A[index++])return false;
                }    
            }else{
                for(int i=0;i<k;i++){
                    if(cur.get(i)!=A[index++])return false;
                }
            }
        }
        
        
        return true;
    }
    
    public List<Integer>transform(List<Integer>A){
        List<Integer>res=new ArrayList<>();
        for(int i=0;i<A.size();i++){
            if((i)%2==1){
                res.add(A.get(i));
            }
        }
        for(int i=0;i<A.size();i++){
            if((i)%2==0){
                res.add(A.get(i));
            }
        }
        return res;
    }
    
    public List<Integer> cut(List<Integer>A,int k){
         List<Integer>res=new ArrayList<>();
         for(int i=k;i<A.size();i++){
             res.add(A.get(i));
         }
         return res;
    }
}
