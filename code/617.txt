/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* mergeTrees(TreeNode* t1, TreeNode* t2) {
        if(t1==NULL)return t2;
        if(t2==NULL)return t1;
        dfs(t1,t2);
        return t1;
    }
    
    void dfs(TreeNode* t1, TreeNode* t2){
        if(t1==NULL)return;
        
        int sum=t1->val+t2->val;
        t1->val=sum;t2->val=sum;
        
        if(t1->left==NULL&&t2->left!=NULL){
            t1->left=new TreeNode(0);
        }
        if(t1->left!=NULL&&t2->left==NULL){
            t2->left=new TreeNode(0);
        }
        
        if(t1->right==NULL&&t2->right!=NULL){
            t1->right=new TreeNode(0);
        }
        if(t1->right!=NULL&&t2->right==NULL){
            t2->right=new TreeNode(0);
        }
        
        dfs(t1->left,t2->left);
        dfs(t1->right,t2->right);
    }
};
