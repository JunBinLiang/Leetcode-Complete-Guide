思路：
1. 当前有两个状态，换还是不换
2. 当前的可以与之前的换或者不换状态进行组合


代码：


class Solution {
    public int minSwap(int[] A, int[] B) {
        int dp[][]=new int[A.length][2]; //[non, swap]
        
        for(int i=0;i<dp.length;i++){
            Arrays.fill(dp[i],Integer.MAX_VALUE);
        }
        dp[0][1]=1;
        dp[0][0]=0;
        
        for(int i=1;i<A.length;i++){
            int prea=A[i-1];
            int preb=B[i-1];
            
            int cura=A[i];
            int curb=B[i];
            
            if(cura>prea&&curb>preb){
                dp[i][0]=dp[i-1][0];
            }
            if(cura>preb&&curb>prea){
                dp[i][0]=Math.min(dp[i][0],dp[i-1][1]);
            }
            
            //swap
            
            if(curb>prea&&cura>preb){
                dp[i][1]=dp[i-1][0]+1;
            }
            
            if(curb>preb&&cura>prea){
                dp[i][1]=Math.min(dp[i][1],dp[i-1][1]+1);
            }
            
        }
        
        return Math.min(dp[A.length-1][0],dp[A.length-1][1]);
    }
}
