/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    int res=0;
    Map<Integer,Integer>map=new HashMap<>();
    int t;
    public int pathSum(TreeNode root, int t) {
        this.t=t;
        dfs(root,0);
        return res;
    }
    
    public void dfs(TreeNode root,int sum){
        if(root==null)return;
        int cur=sum+root.val;
        
        if(cur==t)res++;
        
        if(map.containsKey(cur-t)){
            res+=map.get(cur-t);
        }
        if(!map.containsKey(cur))map.put(cur,0);
        map.put(cur,map.get(cur)+1);
        dfs(root.left,cur);
        dfs(root.right,cur);
        map.put(cur,map.get(cur)-1);
    }
}
