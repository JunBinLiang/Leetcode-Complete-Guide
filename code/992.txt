class Solution {
public:
    int subarraysWithKDistinct(vector<int>& A, int k) {
        return atmost(A,k)-atmost(A,k-1);
    }
    
    int atmost(vector<int>& A, int k){
        int res=0;
        queue<int>q;
        unordered_map<int,int>map;
        for(int i=0;i<A.size();i++){
            q.push(A[i]);
            if(map.count(A[i])==0)map[A[i]]=0;
            map[A[i]]++;
            while(map.size()>k){
                int front=q.front();
                q.pop();
                map[front]--;
                if(map[front]==0)map.erase(front);
            }
            res+=(q.size());
        }
        return res;
    }
};
