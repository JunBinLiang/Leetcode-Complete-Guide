Given a binary array, find the maximum number of consecutive 1s in this array if you can flip at most one 0.

Example 1:
Input: [1,0,1,1,0]
Output: 4
Explanation: Flip the first zero will get the the maximum number of consecutive 1s.
    After flipping, the maximum number of consecutive 1s is 4.
Note:

The input array will only contain 0 and 1.
The length of input array is a positive integer and will not exceed 10,000



class Solution {
public:
    int findMaxConsecutiveOnes(vector<int>& A) {
        int res=0;
        queue<int>q;
        int zero=0;
        int k=1;
        for(int i=0;i<A.size();i++){
            q.push(A[i]);
            if(A[i]==0)zero++;
            
            while(zero>k){
                int f=q.front();
                if(f==0)zero--;
                q.pop();
                
            }
            res=max(res,(int)(q.size()));
        }
        return res;
    }
};
