class Solution {
public:
    vector<int> prisonAfterNDays(vector<int>& A, int k) {
        unordered_map<int,int>hash;
        int day=0;
        int loop=-1;
        vector<int>v;
        while(true){
            int code=encode(A);
            if(day==k)return A;
            if(hash.find(code)!=hash.end()){//already define
                loop=hash[code];
                break;
            }
            hash[code]=day;
            v.push_back(code);
            day++;
            change(A);
        }
       
        
       
        k-=hash.size();
        
        int div=hash.size()-loop;
        int mod=k%div;
        int target=loop+mod;
        int code=v[target];
        
        return back(code);
        
    }
    
    void change(vector<int>&A){
        vector<int>B(A.size());
        
        
        for(int i=1;i<A.size()-1;i++){
            if(A[i-1]==A[i+1]){
                B[i]=1;
            }
        }
        
        for(int i=0;i<A.size();i++){
            A[i]=B[i];
        }
    }
    
    
    vector<int> back(int bit){
        vector<int>res(8);
        for(int i=0;i<8;i++){
            if((bit&(1<<i))!=0)res[i]=1;
        }
        return res;
    }
    
    int encode(vector<int>&A){
        int res=0;
        for(int i=0;i<A.size();i++){
            if(A[i]==1)res=res|(1<<i);
        }
        return res;
    }
};
