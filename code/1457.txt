/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    int res=0;
    public int pseudoPalindromicPaths (TreeNode root) {
        int A[]=new int[10];
        dfs(root,A);
        return res;
    }
    
    public void dfs(TreeNode root,int A[]){
        if(root==null)return;
        int v=root.val;
        A[v]++;
        if(root.left==null&&root.right==null){
            if(check(A))res++;
        }
        dfs(root.left,A);
        dfs(root.right,A);
        A[v]--;
    }
    
    public boolean check(int A[]){
        int cnt=0;
        for(int i:A){
            if(i%2==1)cnt++;
        }
        return cnt<=1;
    }
    
}
