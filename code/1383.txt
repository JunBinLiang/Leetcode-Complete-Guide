代码：

class Solution {
    public int maxPerformance(int n, int[] speed, int[] efficiency, int k) {
        int pair[][]=new int[speed.length][2];
        for(int i=0;i<speed.length;i++){
            pair[i][0]=speed[i];
            pair[i][1]=efficiency[i];
        }
        Arrays.sort(pair,(a,b)->{
            return b[1]-a[1];
        });
        PriorityQueue<Integer>pq=new PriorityQueue<>();
        long res=0,sum=0;
        for(int i=0;i<pair.length;i++){
            sum+=pair[i][0];
            pq.add(pair[i][0]);
            res=Math.max(res,sum*pair[i][1]);
            if(pq.size()==k){
                res=Math.max(res,sum*pair[i][1]);
                sum-=pq.poll();
            }
        }
        return (int)(res%1000000007);
    }
}
