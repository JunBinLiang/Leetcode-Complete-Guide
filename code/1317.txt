思路：
bit+prefix sum


代码：


class Solution {
public:
    int findTheLongestSubstring(string s) {
        int res=0;
        unordered_set<char>vowel={'a','e','i','o','u'};
        unordered_map<int,int>hash;
        vector<int>A(26);
        
        for(int i=0;i<s.size();i++){
            char c=s[i];
            if(vowel.find(c)!=vowel.end()){
                A[c-'a']++;
            }
            int bit=encode(A);  
            if(bit==0)res=max(res,i+1);
            else{
                if(hash.count(bit)!=0){
                    int index=hash[bit];
                    res=max(res,i-index);
                }else{
                    hash[bit]=i;
                }
            }
        }
        return res;
    }
    
    int encode(vector<int>& A){
        int res=0;
        for(int i=0;i<A.size();i++){
            if(A[i]%2==1)res=res|(1<<i);
        }
        return res;
    }
};
