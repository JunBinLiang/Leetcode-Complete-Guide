A Stepping Number is an integer such that all of its adjacent digits have an absolute difference of exactly 1. For example, 321 is a Stepping Number while 421 is not.

Given two integers low and high, find and return a sorted list of all the Stepping Numbers in the range [low, high] inclusive.

 

Example 1:

Input: low = 0, high = 21
Output: [0,1,2,3,4,5,6,7,8,9,10,12,21]
 

Constraints:

0 <= low <= high <= 2 * 10^9








typedef long long ll;
class Solution {
public:
    int l,h;
    vector<int>A;
    vector<int> countSteppingNumbers(int low, int high) {
        this->l=low;
        this->h=high;
        
        if(low==0){
            A.push_back(0);
        }
        
        for(int i=1;i<=9;i++){
            dfs(i);
        }
        sort(A.begin(),A.end());
        return A;
    }
    
    void dfs(ll cur){
        if(cur>this->h){
            return;
        }
        if(cur>=l&&cur<=h){
            A.push_back(cur);
        }
        
        int last=cur%10;
        
        if(last==9){
            dfs(cur*10+(last-1));
        }
        else if(last==0){
            dfs(cur*10+(last+1));
        }
        else{
            dfs(cur*10+(last+1));
            dfs(cur*10+(last-1));
        }
        
    }
};
