class Solution {
    public int boxDelivering(int[][] A, int portsCount, int maxBoxes, int maxWeight) {
        Set<Integer>set=new HashSet<>();
        Queue<int[]>q=new LinkedList<>();
        PriorityQueue<int[]>pq=new PriorityQueue<>((a,b)->{
            return (a[1]+a[2])-(b[1]+b[2]);
        });
        
        int dp[]=new int[A.length];
        int d[]=new int[A.length];
        int sum=0;
        int p=-1;
        int deliver=0;
        
        for(int i=0;i<A.length;i++){
            if(A[i][0]!=p){
                deliver++;
                p=A[i][0];
            }
        }
        
        d[0]=deliver;//deliver time to end from index i
        for(int i=1;i<A.length;i++){
            if(A[i][0]==A[i-1][0]){
                d[i]=d[i-1];
            }
            else{
                if(i!=0)d[i]=d[i-1]-1;
            }
        }
        
        
        for(int i=0;i<A.length;i++){
            set.add(i);
            sum+=A[i][1];
            q.add(new int[]{A[i][0],A[i][1],i});
            
            while(q.size()>maxBoxes||sum>maxWeight){
                int top[]=q.poll();
                sum-=top[1];
                set.remove(top[2]);
            }
            
            while(pq.size()>0&&(!set.contains(pq.peek()[0])))pq.poll();
            
            
            //take all
            int dis1=get1(d,i-q.size()+1)-get1(d,i+1)+get1(dp,i-q.size());
            if(A[i][0]==get(A,i+1))dis1++;
            dp[i]=1+dis1;
            
            
            dp[i]=Math.min(dp[i],2+get1(dp,i-1));//take only one
            
            if(pq.size()>0){
                int peek[]=pq.peek();
                int dis2=d[peek[0]]-get1(d,i+1)+peek[1];
                if(A[i][0]==get(A,i+1))dis2++;
                dp[i]=Math.min(1+dis2,dp[i]);
            }
            pq.add(new int[]{i,get1(dp,i-1),d[i]});
            
            
        }
        return dp[A.length-1];
    }
    
    public int get(int A[][],int i){//port
        if(i>=A.length||i<0)return -1;
        return A[i][0];
    }
    
    public int get1(int A[],int i){
        if(i>=A.length||i<0)return 0;
        return A[i];
    }
}

//2 2 3 3 3 3 4 1 5
