Given a string, find the length of the longest substring T that contains at most k distinct characters.

Example 1:

Input: s = "eceba", k = 2
Output: 3
Explanation: T is "ece" which its length is 3.
Example 2:

Input: s = "aa", k = 1
Output: 2
Explanation: T is "aa" which its length is 2.






class Solution {
public:
    int lengthOfLongestSubstringKDistinct(string s, int k) {
        int res=0;
        queue<char>q;
        unordered_map<char,int>hash;
        for(int i=0;i<s.size();i++){
            q.push(s[i]);
            hash[s[i]]++;
            
            while(hash.size()>k){
                char f=q.front();q.pop();
                hash[f]--;
                if(hash[f]==0)hash.erase(f);
            }
            res=max(res,(int)(q.size()));
        }
        return res;
    }
};
