Given three integer arrays arr1, arr2 and arr3 sorted in strictly increasing order, return a sorted array of only the integers that appeared in all three arrays.

 

Example 1:

Input: arr1 = [1,2,3,4,5], arr2 = [1,2,5,7,9], arr3 = [1,3,4,5,8]
Output: [1,5]
Explanation: Only 1 and 5 appeared in the three arrays.
 

Constraints:

1 <= arr1.length, arr2.length, arr3.length <= 1000
1 <= arr1[i], arr2[i], arr3[i] <= 2000












class Solution {
public:
    vector<int> arraysIntersection(vector<int>& arr1, vector<int>& arr2, vector<int>& arr3) {
        vector<int>A;
        int i=0,j=0;
        while(i<arr1.size()&&j<arr2.size()){
            if(arr1[i]==arr2[j]){
                A.push_back(arr1[i]);
                i++;j++;
            }
            else if(arr1[i]>arr2[j]){
                j++;
            }
            else{
                i++;
            }
        }
        
        i=0;
        j=0;
        vector<int>res;
        while(i<A.size()&&j<arr3.size()){
            if(A[i]==arr3[j]){
                res.push_back(A[i]);
                i++;j++;
            }
            else if(A[i]>arr3[j]){
                j++;
            }
            else{
                i++;
            }
        }
        return res;
    }
};
