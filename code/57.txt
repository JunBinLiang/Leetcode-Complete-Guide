class Solution {
    public int[][] insert(int[][] A, int[] pair) {
        List<int[]>list=new ArrayList<>();
        boolean found=false;
        for(int i=0;i<A.length;i++){
            if(pair[0]>A[i][1]||pair[1]<A[i][0]){
                continue;
            }
            A[i][0]=Math.min(A[i][0],pair[0]);
            A[i][1]=Math.max(A[i][1],pair[1]);
            found=true;
            break;
        }
        
        Stack<int[]>stack=new Stack<>();
        for(int i=0;i<A.length;i++){
            if(stack.size()==0){
                stack.push(A[i]);
            }else{
                if(A[i][0]<=stack.peek()[1]){
                    stack.peek()[0]=Math.min(stack.peek()[0],A[i][0]);
                    stack.peek()[1]=Math.max(stack.peek()[1],A[i][1]);
                }else{
                    stack.push(A[i]);
                }
            }
        }
        if(!found)stack.push(pair);
        while(stack.size()!=0)list.add(stack.pop());
        Collections.sort(list,(a,b)->{
            return a[0]-b[0];
        });
        int res[][]=new int[list.size()][2];
        for(int i=0;i<list.size();i++){
            res[i][0]=list.get(i)[0];
            res[i][1]=list.get(i)[1];
        }
        return res;
    }
}
