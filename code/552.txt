class Solution {
    public int checkRecord(int n) {
        if(n == 0){
            return 0;
        }
        int mod = 1000000007;
        long res = 0;
        long dp1[][] = new long[n][4]; // absent : P, L, LL, A
        long dp2[][] = new long[n][3]; // no absent :  P, L, LL 
        

    
        dp1[0][3] = 1;
        dp2[0][1] = 1;
        dp2[0][0] = 1;
        
        for(int i = 1; i < n; i++){
            //take a
            dp1[i][3] += (dp2[i - 1][0] + dp2[i - 1][1] + dp2[i - 1][2]);
            dp1[i][3] %= mod;
            
            //P
            dp1[i][0] += (dp1[i - 1][0] + dp1[i - 1][1] + dp1[i - 1][2] + dp1[i - 1][3]);
            dp1[i][0] %= mod;
            
            dp2[i][0] += (dp2[i - 1][0] + dp2[i - 1][1] + dp2[i - 1][2]);
            dp2[i][0] %= mod;
            
            
            //L
            dp1[i][1] += dp1[i - 1][0] + dp1[i - 1][3];
            dp1[i][1] %= mod;
            
            dp1[i][2] += dp1[i - 1][1];
            dp1[i][2] %= mod;
            
            
            dp2[i][1] += dp2[i - 1][0];
            dp2[i][1] %= mod;
            
            dp2[i][2] += dp2[i - 1][1];
            dp2[i][2] %= mod;
        }
        
        
        for(int i = 0; i < 4; i++){
            res += dp1[n - 1][i];
            res %= mod;
        }
        
        for(int i = 0; i < 3; i++){
            res += dp2[n - 1][i];
            res %= mod;
        }
        
        
        return (int)(res);
    }
}

