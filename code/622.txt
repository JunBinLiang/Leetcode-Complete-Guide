class MyCircularQueue {
    int k;
    int l=0,r=0;
    int A[];
    int size=0;
    public MyCircularQueue(int k) {
        this.k=k;
        this.A=new int[k];
        r=k-1;
    }
    
    public boolean enQueue(int value) {
        if(size==A.length)return false;
        size++;
        r++;r%=k;
        A[r]=value;
        return true;
    }
    
    public boolean deQueue() {
        if(size==0)return false;
        size--;
        l++;
        l%=k;
        return true;
    }
    
    public int Front() {
        if(size==0)return -1;
        return A[l];
    }
    
    public int Rear() {
        if(size==0)return -1;
        return A[r];
    }
    
    public boolean isEmpty() {
        return size==0;
    }
    
    public boolean isFull() {
        return size==k;
    }
}

/**
 * Your MyCircularQueue object will be instantiated and called as such:
 * MyCircularQueue obj = new MyCircularQueue(k);
 * boolean param_1 = obj.enQueue(value);
 * boolean param_2 = obj.deQueue();
 * int param_3 = obj.Front();
 * int param_4 = obj.Rear();
 * boolean param_5 = obj.isEmpty();
 * boolean param_6 = obj.isFull();
 */
