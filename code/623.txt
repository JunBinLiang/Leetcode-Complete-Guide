/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int d;
    TreeNode* addOneRow(TreeNode* root, int v, int d) {
        if(d==1){
            TreeNode* node=new TreeNode(v);
            node->left=root;
            return node;
        }
        this->d=d;
        dfs(root,v,1);
        return root;
    }
    
    void dfs(TreeNode* root,int v,int depth){
        if(root==NULL)return;
        if(depth==d-1){
            TreeNode* node1=new TreeNode(v);
            node1->left=root->left;
            root->left=node1;
            
            TreeNode* node2=new TreeNode(v);
            node2->right=root->right;
            root->right=node2;
        }
        else{
            dfs(root->left,v,depth+1);
            dfs(root->right,v,depth+1);
        }
    }
};
