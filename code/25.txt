/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode reverseKGroup(ListNode head, int k) {
        if(k==1)return head;
        
        ListNode dummy=new ListNode();
        dummy.next=head;
        ListNode pre=dummy;
        ListNode cur=dummy;
       
        while(cur!=null){
            ListNode a=cur.next;
            for(int i=0;i<k;i++){//skip k node
                cur=cur.next;
                if(cur==null)break;
            }
            if(cur==null)break;
            
            ListNode b=cur;
            ListNode next=cur.next;
            
            reverse(a,b.next);
            pre.next=b;
            a.next=next;
            pre=a;
            cur=a;
        }
        
        return dummy.next;
    }
    
    public void reverse(ListNode a,ListNode b){
        ListNode pre=null;
        ListNode cur=a;
        while(cur!=b){
            ListNode next=cur.next;
            cur.next=pre;
            pre=cur;
            cur=next;
        }
        
        
        
    }
}
