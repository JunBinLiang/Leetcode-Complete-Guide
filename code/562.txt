Given a 01 matrix M, find the longest line of consecutive one in the matrix. The line could be horizontal, vertical, diagonal or anti-diagonal.
Example:
Input:
[[0,1,1,0],
 [0,1,1,0],
 [0,0,0,1]]
Output: 3
Hint: The number of elements in the given matrix will not exceed 10,000.











class Solution {
    public int longestLine(int[][] A) {
        if(A.length==0)return 0;
        int res=0;
        int dia1[][]=new int[A.length][A[0].length];
        int dia2[][]=new int[A.length][A[0].length];
        int hor[][]=new int[A.length][A[0].length];
        int ver[][]=new int[A.length][A[0].length];
        
        for(int i=0;i<A.length;i++){
            for(int j=0;j<A[0].length;j++){
                if(A[i][j]==0)continue;
                hor[i][j]=1+get(hor,i,j-1);
                ver[i][j]=1+get(ver,i-1,j);
                dia1[i][j]=1+get(dia1,i-1,j-1);
                dia2[i][j]=1+get(dia2,i-1,j+1);
                
                
                res=Math.max(res,hor[i][j]);
                res=Math.max(res,ver[i][j]);
                res=Math.max(res,dia1[i][j]);
                res=Math.max(res,dia2[i][j]);
            }
        }
        
        
        return res;
    }
    
    public int get(int A[][],int i,int j){
        if(i<0||j<0||i>=A.length||j>=A[0].length)return 0;
        return A[i][j];
    }
}
