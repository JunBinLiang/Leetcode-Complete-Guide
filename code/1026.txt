/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int res=0;
    int maxAncestorDiff(TreeNode* root) {
        dfs(root);
        return res;
    }
    
    pair<int,int> dfs(TreeNode* root){
        if(root==NULL){
            return {0,0};
        }
        
        int mx=root->val,mn=root->val;
        int v=root->val;
        pair<int,int>l=dfs(root->left);
        pair<int,int>r=dfs(root->right);
        
        if(root->left!=NULL){
            res=max(res,abs(v-l.first));
            res=max(res,abs(v-l.second));
            mx=max(mx,l.first);
            mn=min(mn,l.second);
        }
        if(root->right!=NULL){
            res=max(res,abs(v-r.first));
            res=max(res,abs(v-r.second));
            mx=max(mx,r.first);
            mn=min(mn,r.second);
        }
        
        
        return {mx,mn};
    }
    
};
