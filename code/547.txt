class Solution {
    List<Integer>adjecent[];
    boolean visit[];
    public int findCircleNum(int[][] A) {
        int n=A.length;
        int res=0;
        visit=new boolean[n];
        adjecent=new ArrayList[n];
        for(int i=0;i<adjecent.length;i++){
            adjecent[i]=new ArrayList<>();
        }
        
        for(int i=0;i<n;i++){
            for(int j=0;j<n;j++){
                if(A[i][j]==1){
                    adjecent[i].add(j);
                    adjecent[j].add(i);
                }
            }
        }
        
        for(int i=0;i<n;i++){
            if(visit[i])continue;
            res++;
            visit[i]=true;
            dfs(i);
        }
        return res;
    }
    
    public void dfs(int root){
        List<Integer>next=adjecent[root];
        for(int c:next){
            if(visit[c])continue;
            visit[c]=true;
            dfs(c);
        }
    }
}
