class Solution {
public:
    int threeSumMulti(vector<int>& A, int target) {
        int mod=1000000007;
        long res=0;
        unordered_map<int,int>hash;
        vector<vector<long>>V;
        for(int i:A){
            hash[i]++;
        }
        
        
        for(auto it=hash.begin();it!=hash.end();it++){
            V.push_back({it->first,it->second});
        }
        
        sort(V.begin(),V.end(),[](const vector<long>&a,const vector<long>&b){
           return a[0]<b[0]; 
        });

        for(int i=0;i<V.size();i++){
            
            vector<long>&p=V[i];
            if(p[0]*3==target&&p[1]>=3){
                res+=(p[1]*(p[1]-1)*(p[1]-2)/6);
                res%=mod;
            }
            
            if(p[1]>=2){
                int com=target-p[0]*2;
                if(hash.find(com)!=hash.end()&&com!=p[0]){
                    res+=(hash[com]*(p[1]*(p[1]-1)/2));
                }
            }
            
            int com=target-V[i][0];
            int l=i+1,r=V.size()-1;
            while(l<r){
                if(V[l][0]+V[r][0]<com){
                    l++;
                }
                else if(V[l][0]+V[r][0]>com){
                    r--;
                }
                else{
                    res+=(V[i][1]*V[l][1]*V[r][1]);
                    res%=mod;
                    l++;
                }
            }
            
        }
        
        
        return (int)(res);
    }
};
