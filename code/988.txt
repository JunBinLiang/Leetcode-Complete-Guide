/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    String res="";
    public String smallestFromLeaf(TreeNode root) {
        dfs(root,new StringBuilder());
        return res;
    }
    
    public void dfs(TreeNode root,StringBuilder str){
        if(root==null)return;
        char c=(char)(root.val+'a');
        str.append(c+"");
        if(root.left==null&&root.right==null){
            String s=str.reverse().toString();
            str.reverse();
            if(res.length()==0)res=s;
            else{
                if(res.compareTo(s)>0){
                    res=s;
                }
            }
        }
        
        dfs(root.left,str);
        dfs(root.right,str);
        str.setLength(str.length()-1);
    }
}
