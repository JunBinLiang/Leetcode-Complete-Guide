class Solution {
    boolean visit[][];
    Queue<int[]>q;
    public int[][] updateMatrix(int[][] A) {
        int r=A.length;
        int c=A[0].length;
        int res[][]=new int[r][c];
        visit=new boolean[r][c];
        
        q=new LinkedList<>();
        
        for(int i=0;i<r;i++){
            for(int j=0;j<c;j++){
                if(A[i][j]==0){
                    q.add(new int[]{i,j,0});
                    visit[i][j]=true;
                }
            }
        }
        
        
        while(q.size()!=0){
            int pair[]=q.poll();
            res[pair[0]][pair[1]]=pair[2];
            add(A,pair[0]+1,pair[1],pair[2]+1);
            add(A,pair[0]-1,pair[1],pair[2]+1);
            add(A,pair[0],pair[1]+1,pair[2]+1);
            add(A,pair[0],pair[1]-1,pair[2]+1);
            
        }
        
        return res;
    }
    
    public void add(int A[][],int i,int j,int level){
        if(i<0||j<0||i>=A.length||j>=A[0].length)return;
        if(visit[i][j])return;
        visit[i][j]=true;
        q.add(new int[]{i,j,level});
        
    }
}
