代码：


class Solution {
    int pre[];
    int dp[][];
    public int stoneGameV(int[] A) {
        pre=new int[A.length];
        int sum=0;
        for(int i=0;i<A.length;i++){
            sum+=A[i];
            pre[i]=sum;
        }
        dp=new int[A.length][A.length];
        
        for(int i=0;i<dp.length;i++)Arrays.fill(dp[i],-1);
        
        return dfs(A,0,A.length-1);
    }
    
    
    public int dfs(int A[],int l,int r){
        if(l==r)return 0;
        if(dp[l][r]!=-1)return dp[l][r];
        int res=Integer.MIN_VALUE;
        for(int i=l;i<r;i++){
            int left=pre[i]-get(pre,l-1);
            int right=pre[r]-pre[i];
            
            if(left>right){//throw left
                res=Math.max(res,right+dfs(A,i+1,r));
            }else if(right>left){//throw right
                res=Math.max(res,left+dfs(A,l,i));
            }else{
                res=Math.max(res,right+dfs(A,i+1,r));
                res=Math.max(res,left+dfs(A,l,i));
            }
        }
        
        dp[l][r]=res;
        return res;
    }
    
    
    
    public int get(int A[],int i){
        if(i<0)return 0;
        return A[i];
    }
}

//[1,1,2] 3
