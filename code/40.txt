class Solution {
    Set<List<Integer>>res=new HashSet<>();
    int target;
    public List<List<Integer>> combinationSum2(int[] A, int target) {
        Arrays.sort(A);
        this.target=target;
        dfs(A,0,0,new ArrayList<>());
        
        return new ArrayList<>(res);
    }
    
    public void dfs(int A[],int index,int sum,List<Integer>cur){
        
        if(sum==target){
            res.add(new ArrayList<>(cur));
            return;
        }
        
        for(int i=index;i<A.length;i++){
            if(sum+A[i]>target)break;
            cur.add(A[i]);
            dfs(A,i+1,sum+A[i],cur);
            cur.remove(cur.size()-1);
        }
    }
}
