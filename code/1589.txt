class Solution {
    public int maxSumRangeQuery(int[] A, int[][] requests) {
        long res=0;int mod=1000000007;
        PriorityQueue<Integer>pq1=new PriorityQueue<>((b,a)->{
            return a-b;
        });
        PriorityQueue<Integer>pq2=new PriorityQueue<>((b,a)->{
            return a-b;
        });
        
        for(int i:A)pq2.add(i);
        int arr[]=new int[A.length];
        for(int pair[]:requests){
            int start=pair[0],end=pair[1];   
            arr[start]++;
            if(end+1<A.length)arr[end+1]--;
        }
        
        int sum=0;
        for(int i=0;i<arr.length;i++){
            sum+=arr[i];
            pq1.add(sum);
            
        }
        while(pq1.size()!=0){
            long fre=pq1.poll();
            long max=pq2.poll();
            res+=(fre*max);
            res%=mod;
        }
        
        
        return (int)(res%mod);
    }
}
