class Solution {
public:
    int deleteAndEarn(vector<int>& A) {
        if(A.size()==0)return 0;
        int res=0;
        unordered_map<int,int>hash;
        for(int i=0;i<A.size();i++){
            int cur=A[i];
            if(hash.count(cur)==0)hash[cur]=0;
            hash[cur]++;
        }
        
        vector<vector<int>>v;
        for(auto it=hash.begin();it!=hash.end();it++){
            v.push_back({it->first,it->first*it->second});
        }
        
        sort(v.begin(),v.end(),[](const vector<int>&a,const vector<int>&b)
        {
           return a[0] < b[0];
        });
        
        vector<int>dp(v.size());
        
        dp[0]=v[0][1];
        res=max(res,dp[0]);
        for(int i=1;i<v.size();i++){
            if(v[i][0]-v[i-1][0]==1){
                if(i-2>=0)dp[i]=max(dp[i-2]+v[i][1],dp[i-1]);
                else dp[i]=max(v[i][1],dp[i-1]);
            }else{
                dp[i]=dp[i-1]+v[i][1];
                if(i-2>=0)dp[i]=max(dp[i],dp[i-2]);
            }
            res=max(res,dp[i]);
        }
        return res;
    }
};
