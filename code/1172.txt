class DinnerPlates {
    int capacity;
    Stack<Integer>A[]=new Stack[200010];
    TreeSet<Integer>treeset=new TreeSet<>();//current empty stack
    int r=0;
    public DinnerPlates(int capacity) {
        this.capacity=capacity;
        
        for(int i=0;i<200010;i++){
            treeset.add(i);
            A[i]=new Stack<>();
        }
    }
    
    public void push(int val) {
        Integer l=treeset.higher(-1);
        A[l].push(val);
        if(A[l].size()==this.capacity){
            treeset.remove(l);
            if(l==r){
                r++;
            }
        }
        
    }
    
    public int pop() {
        while(r>=0&&A[r].size()==0){
            r--;
        }
        if(r==-1){
            r=0;
            return -1;
        }
        
        int top=A[r].pop();
        treeset.add(r);
        return top;
    }
    
    public int popAtStack(int index) {
        if(A[index].size()==0)return -1;
        int top=A[index].pop();
        treeset.add(index);
        return top;
    }
}

/**
 * Your DinnerPlates object will be instantiated and called as such:
 * DinnerPlates obj = new DinnerPlates(capacity);
 * obj.push(val);
 * int param_2 = obj.pop();
 * int param_3 = obj.popAtStack(index);
 */
