思路：
二分法，每一次分两段的时候看看他是那一块

worst o（n）, expected o(log n)



代码：


class Solution {
    public int findMin(int[] A) {
        int l=0,r=A.length-1;
        int res=0;
        int min=Integer.MAX_VALUE;
        while(l<=r){
            int mid=l+(r-l)/2;
            if(A[mid]>A[0]){
                l=mid+1;
            }else if(A[mid]<A[0]){
                res=mid;
                r=mid-1;
            }else{
                min=Math.min(A[l],min);
                l++;
            }
        }
        return Math.min(A[res],min);
    }
}
