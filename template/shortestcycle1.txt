 graph=new ArrayList[A.length];
        Arrays.setAll(graph,e->new ArrayList<>());
        for(int i=0;i<A.length;i++){
            for(int j=i+1;j<A.length;j++){
                if((A[i]&A[j])!=0){
                    graph[i].add(j);
                    graph[j].add(i);
                }
            }
        }

        int res=Integer.MAX_VALUE;
        int n=A.length;
        for(int i=0;i<A.length;i++){
            //remove vertex i
            int dis[][]=new int[n][n];
            for(int j=0;j<dis.length;j++)Arrays.fill(dis[j],Integer.MAX_VALUE);

            for(int j=0;j<n;j++){
                if(j==i)continue;
                Queue<Integer>q=new LinkedList<>();
                q.add(j);
                dis[j][j]=0;
                while(q.size()>0){
                    int top=q.poll();
                    for(int next:graph[top]){
                        if(next==i)continue;
                        if(dis[j][top]+1<dis[j][next]){
                            q.add(next);
                            dis[j][next]=dis[j][top]+1;
                        }
                    }
                }
            }
            
            for(int j=0;j<graph[i].size();j++){
                int a=graph[i].get(j);
                for(int k=j+1;k<graph[i].size();k++){
                    int b=graph[i].get(k);
                    if(dis[a][b]!=Integer.MAX_VALUE){
                        res=Math.min(res,2+dis[a][b]);
                    }
                }
            }
        }
