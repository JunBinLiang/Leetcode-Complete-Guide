思路：
观察。。。+暴力


代码：

class Solution {
    public List<String> fullJustify(String[] words, int width) {
        LinkedList<String>all=new LinkedList<>();
        for(String s:words)all.addLast(s);
        List<String>res=new ArrayList<>();
        
        while(all.size()!=0){
            int len=0;
            boolean last=false;
            List<String>list=new ArrayList<>();
            while(true){
                String front=all.getFirst();
                if(len+list.size()+front.length()>width){
                    break;
                }
                list.add(front);
                all.removeFirst();
                len+=front.length();
                if(all.size()==0){
                    last=true;
                    break;
                }
            }
            
            if(list.size()==1){
                String s=list.get(0);
                res.add(s+empty(width-s.length()));
                continue;
            }
            
            
            if(!last){//split as even as possible
                int space=width-len;
                StringBuilder str=new StringBuilder();
                str.append(list.get(0));
                int mod=space%(list.size()-1);
                int each=space/(list.size()-1);
                for(int i=1;i<list.size();i++){
                    if(mod!=0){
                        str.append(" ");
                        mod--;
                    }
                    str.append(empty(each)+list.get(i));
                }
                res.add(str.toString());
            }else{//left justify
                StringBuilder str=new StringBuilder();
                str.append(list.get(0));
                for(int i=1;i<list.size();i++){
                    str.append(" "+list.get(i));
                }
                str.append(empty(width-len-(list.size()-1)));
                res.add(str.toString());
            }
            
        }
        
        return res;
    }
    
    
    public String empty(int n){
        StringBuilder str=new StringBuilder();
        for(int i=0;i<n;i++){
            str.append(" ");
        }
        return str.toString();
    }
}
