代码

import java.util.*;

/**
 * public class Tree {
 *   int val;
 *   Tree left;
 *   Tree right;
 * }
 */
class Solution {
    int res=0;
    int MIN=-5000000;
    public int solve(Tree root) {
        // Write your code here
        if(root==null)return 0;
        
        dfs(root);
        return res;
    }
    
    public int[] dfs(Tree root){
        if(root==null)return new int[]{MIN,MIN};
        int cur=root.val;
        if(root.left==null&&root.right==null){
            if(cur%2==1){
                return new int[]{1,MIN};
            }else{
                return new int[]{MIN,1};
            }
        }
        
        int l[]=dfs(root.left);
        int r[]=dfs(root.right);
        
        //System.out.println(root.val+"   "+l[0]+"  "+l[1]+"   "+r[0]+"  "+r[1]);
        
        if(cur%2==1){
            res=Math.max(res,1+l[0]+r[1]);
            res=Math.max(res,1+r[0]+l[1]);
            
            res=Math.max(res,1+r[0]);
            res=Math.max(res,1+l[0]);
            
            return new int[]{Math.max(1,Math.max(1+r[1],1+l[1])),Math.max(1+l[0],1+r[0])};
        }else{
            res=Math.max(res,1+l[0]+r[0]);
            res=Math.max(res,1+l[1]+r[1]);
            res=Math.max(res,1+l[1]);
            res=Math.max(res,1+r[1]);
            return new int[]{Math.max(1+r[0],1+l[0]),Math.max(1,Math.max(1+l[1],1+r[1]))};
        }
    }
   
   
    //[1 3  2  4   5 8 8]

}
