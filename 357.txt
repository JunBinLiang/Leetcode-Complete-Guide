思路：

n^2 dp


代码：

import java.util.*;


class Solution {
    public int solve(int[] A) {
        // Write your code here
        if(A.length==0)return 0;
        int dp[][]=new int[A.length][2];
        int res=1;
        for(int i=0;i<dp.length;i++){
            Arrays.fill(dp[i],1);
        }
        
        for(int i=1;i<A.length;i++){
            for(int j=0;j<i;j++){
                if(A[j]<A[i]){//neg
                    dp[i][1]=Math.max(dp[i][1],1+dp[j][0]);
                    res=Math.max(res,dp[i][1]);
                }else if(A[j]>A[i]){//pos
                    dp[i][0]=Math.max(dp[i][0],1+dp[j][1]);
                    res=Math.max(res,dp[i][0]);
                }
            }
        }
        
        return res;
    }
}
